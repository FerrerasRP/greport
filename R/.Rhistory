SampleFrac(1)
SampleFrac(c(a=1,b=2))
SampleFrac(c(randomized=3,a=1,b=2))
require(Hmisc)
SampleFrac(c(randomized=3,a=1,b=2))
SampleFrac(c(randomized=3,a=1,b=2))
SampleFrac(c(randomized=3,a=1,b=2))
SampleFrac(1)
SampleFrac(c(randomized=2))
SampleFrac(c(randomized=2))
SampleFrac(c(randomized=2), enrolled=FALSE)
SampleFrac(c(randomized=2), enrolled=FALSE)
SampleFrac(c(randomized=2), enrolled=FALSE)
SampleFrac(c(randomized=3,a=1,b=2))
q()
require(Hmisc)
xless(s)
attributes(s)
attributes(s)
attr(s,'fun')
ptype
ngcond
ccv
ccv1
xnames[xtype =='numeric']
xtype
attr(s,'fun')
attr(s,'xtype')
attributes(s)
d$days
names(X)
levels(X$yvar)
table(X$yvar)
dim(X)
X[1:20,]
levels(s$yvar)
dim(s)
names(s)
attributes(s$yvar)
table(s$yvar)
levels(s$yvar)
levels(factor(s$yvar))
levels(s$yvar)
levels(s$yvar)
traceback()
xyplot(sbp ~ days | region * treat)
xyplot(sbp ~ days | region * treat, data=d)
vars
vars[length(vars)]
levels(X$yvar)
groups
form
names(X)
panel
xlab
xtype
xlabels[xtype=='numeric']
 xlab <- labelPlotmath(xlabels[xtype == 'numeric'],
                          xunits[xtype == 'continuous'])
xlab
 xyplot(form, data=X, scales=list(y='free', rot=0), panel=panel,
             xlab=xlab, strip=strip, par.strip.text=pst, ...)
 dd=xyplot(form, data=X, scales=list(y='free', rot=0), panel=panel,
)
dim(ww)
ww= xyplot(form, data=X, scales=list(y='free', rot=0), panel=panel,
             xlab=xlab, strip=strip, par.strip.text=pst, ...)
dim(ww)
useOuterStrips(ww)

             xlab=xlab, strip=strip, par.strip.text=pst, ...)
contents(d)
levels(s$yvar)
system('rm /tmp/z; cat /tmp/z')
system('rm /tmp/z; cat /tmp/z')
system('cat /tmp/z')
dev.off()
p
p
system('rm /tmp/z')
system('cat /tmp/z')
p
dim(p)
dim(p)
print(p)
useOuterStrips(p)
dev.off()
dev.off()
q()
require(Hmisc)
p
p2=useOuterStrips(p)
p2
p2=useOuterStrips(p, strip=function(...) print(list(...)))
p2
?useOuterStrips
?useOuterStrips
q()
require(Hmisc)
s
source('~/R/Hmisc/R/summaryS.s')
names(s)
source('~/R/Hmisc/R/summaryS.s')
form
names(X)
groups
?lattice:::panel.superpose
?panel.superpose
source('~/R/Hmisc/R/summaryS.s')
plot(s, groups='region', panel=panel.superpose)
plot(s, groups='region', panel=function(..){panel.loess(...); panel.superpose(...)})
plot(s, groups='region', panel=function(...){panel.loess(...); panel.superpose(...)})
?panel.loess
?loess.smooth
plot(s, groups='region', panel=panel.superpose, panel.groups=panel.xyplot)
source('~/R/Hmisc/R/summaryS.s')
source('~/R/Hmisc/R/summaryS.s')
source('~/R/Hmisc/R/summaryS.s')
names(s)
args(dotplot)
lattice:::dotplot.formula
lattice.getOption("panel.dotplot")
ordGridFun(TRUE)
ordGridFun(TRUE)$segments
ordGridFun(TRUE)$points
show.pch()
s
traceback()
plot(s)
attr(s,'funlabel')
attr(s,'funlabel')
attr(s,'funlabel')
smean.cl.normal
s
s$y
xless(s)
xx=cbind(a=1:2, b=3:4)
lapply(xx, max)
levels(s$yvar)
smean.sd
?xyplot
s
xless(s)
subset(s, yvar=='age')
yy=cbind(1:2, 5:6)
range(yy)
range(yy[1:2])
range(yy[1:2,])
yy=c(3,4)
yy[1:2,]
?plotmath
?auto.key
?key
?xyplot
names(d)
find('as.data.frame.Surv')
rm('as.data.frame.Surv')
q()
setwd('~/projects/ISCHEMIA/data')
traceback()
nobsY
source('~/R/Hmisc/R/nobsY.s')
source('~/R/Hmisc/R/nobsY.s')
sc
dim(Xc)
sc
Xc=X[,sc,drop=FALSE]
dim(Xc)
names(Xc)
sapply(Xc, function(x) attr(x, 'what')$variable)
attributes(Xc[[1]])
sapply(Xc, function(x) attr(x, 'what')['variable'])
sapply(Xc, function(x) attr(x, 'what')['label'])
attributes(Xc[[1]])
dim(Xc)
colnames(Xc)
Xc=X[, sc, drop=FALSE)
Xc=X[, sc, drop=FALSE]
colnames(Xc)
Xclab
table(ischccta)
cat('3', sep='\n')
cat('3')
elab
tabl$elab
cat(tabl[elab[1]])
cat(tabl$elab[1])
tabl$elab
tabl$elab[1]
cat(tabl$elab)
args(data.frame)
default.stringsAsFactors()
dim(X$demog)
dim(exclusions)
table(exclusions$isch)
table(c(X$echo$streisch, X$nuc$concisch, X$cmr$cmriscsu))
table(c(as.character(X$echo$streisch), as.character(X$nuc$concisch), as.character(X$cmr$cmriscsu)))
58+85
dim(X$rand)
dim(X$rand)
dim(X$demog)
q()
